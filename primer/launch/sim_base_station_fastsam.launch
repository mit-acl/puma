<?xml version="1.0" encoding="UTF-8"?>
<launch>

  <!--
    Parameters
  -->

  <arg name="quad1" default="SQ01s"/>
  <arg name="quad2" default="SQ02s"/>
  <arg name="gui_mission" default="true"/>
  <arg name="rviz" default="true"/>
  <arg name="gazebo" default="true"/>
  <arg name="gzclient" default="false"/>
  <arg name="type_of_obst_traj" default="trefoil"/>   <!-- trefoil   eightCurve    square  epitrochoid  static -->
  <arg name="alpha_scale_obst_traj" default="2.0"/>   
  <arg name="beta_faster_obst_traj" default="0.666666666666666666666"/>   
  <arg name="num_of_obs" default="10" />  <!--  Only one obstacle is supported right now -->
  <arg name="objects_type" default="pads" /> <!-- pads/random -->

  <!--
    FastSAM
  -->

  <!-- <include file="$(find puma)/launch/fastsam.launch">
    <arg name="quad" value="SQ01s"/>    
    <arg name="camera" value="t265_fisheye1"/>
    <arg name="is_sim" value="true"/>
  </include> -->

  <!-- Start Behaviour Selector-->
  <!-- <node pkg="behavior_selector" type="behavior_selector_node.py" name="behavior_selector" output="screen" /> -->

  <!-- Start Gazebo-->
  <group if="$(arg gazebo)">
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="world_name" value="$(find puma)/meshes/empty.world"/>
      <arg name="gui" value="$(arg gzclient)"/> <!-- Set to false if you only want gzserver (and NOT gzclient) -->
    </include>
  </group>

  <!-- Disable, for instance, for ssh connections -->
  <group if="$(arg rviz)">
    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find puma)/rviz_cfgs/panther.rviz"/>
  </group>

  <!-- Disable, for instance, for ssh connections -->
  <group if="$(arg gui_mission)"> 
    <node pkg="rqt_gui" type="rqt_gui" name="rqt_gui" args="--perspective-file $(find puma)/rqt_cfgs/demo_interface.perspective"/>
  </group>

  <!-- Get objects on the ground-->
  <node name="floor_objects_env" pkg="puma" type="floor_objects_env.py" output="screen" args="--num_of_obs $(arg num_of_obs) 
  --gazebo $(arg gazebo) --type_of_obst_traj $(arg type_of_obst_traj) --alpha_scale_obst_traj $(arg alpha_scale_obst_traj) --beta_faster_obst_traj $(arg beta_faster_obst_traj) --objects_type $(arg objects_type)"/> 

  <!-- get dynamic obstacle -->
  <node name="dynamic_corridor" pkg="puma" type="dynamic_corridor.py" output="screen" args="--num_of_obs 1 
  --gazebo $(arg gazebo) --type_of_obst_traj $(arg type_of_obst_traj) --alpha_scale_obst_traj $(arg alpha_scale_obst_traj) --beta_faster_obst_traj $(arg beta_faster_obst_traj) --objects_type $(arg objects_type)"/> 

</launch>